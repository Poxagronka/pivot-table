#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ GAS –ø—Ä–æ–µ–∫—Ç–æ–≤ (–ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã ‚Üí GAS + GitHub)
sync_gas_project() {
    local project_name=$1
    local project_path=$2
    
    echo "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GAS –ø—Ä–æ–µ–∫—Ç–∞: $project_name"
    
    if [ ! -d "$project_path" ]; then
        echo "‚ùå –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $project_path"
        return 1
    fi
    
    cd "$project_path"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ .clasp.json
    if [ ! -f ".clasp.json" ]; then
        echo "‚ùå –§–∞–π–ª .clasp.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–µ–∫—Ç –Ω–µ —Å–≤—è–∑–∞–Ω —Å GAS"
        echo "üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: clasp clone <script_id>"
        return 1
    fi
    
    echo "üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ git
    git add .
    
    # –°–Ω–∞—á–∞–ª–∞ –≤—Å–µ–≥–¥–∞ –ø—É—à–∏–º –≤ GAS (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç git —Å—Ç–∞—Ç—É—Å–∞)
    echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ Google Apps Script..."
    if clasp push --force; then
        echo "‚úÖ GAS –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ GAS"
        echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
        echo "   cd $project_path"
        echo "   clasp push --force"
        return 1
    fi
    
    # –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ–º —Å git
    if [[ `git status --porcelain` ]]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–µ: $project_name"
        echo ""
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π
        echo "üìã Izmenen–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        git status --short
        echo ""
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º commit message
        echo "üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞ (Enter –¥–ª—è –∞–≤—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏—è):"
        read -r commit_message
        
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
        if [ -z "$commit_message" ]; then
            commit_message="Local changes: $(date '+%Y-%m-%d %H:%M')"
        fi
        
        echo "üìù –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º: \"$commit_message\""
        git commit -m "$commit_message"
        
        echo "üîÑ –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ GitHub..."
        if ! git pull --rebase origin main; then
            echo "‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ merge. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é:"
            echo "   cd $project_path"
            echo "   git status"
            echo "   –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: git push"
            return 1
        fi
        
        echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ GitHub..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ upstream branch
        if ! git rev-parse --abbrev-ref --symbolic-full-name @{u} > /dev/null 2>&1; then
            echo "üîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º upstream branch..."
            git push --set-upstream origin main
        else
            git push
        fi
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ GitHub sync —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
            echo "üéâ $project_name - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
            echo "   ‚úÖ GAS: –æ–±–Ω–æ–≤–ª–µ–Ω"
            echo "   ‚úÖ GitHub: –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            echo "‚ùå $project_name - –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ GitHub"
            echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "   cd $project_path"
            echo "   git push"
            return 1
        fi
    else
        echo "üìÑ $project_name - –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ git"
        echo "üéâ $project_name - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        echo "   ‚úÖ GAS: –æ–±–Ω–æ–≤–ª–µ–Ω"
        echo "   ‚ÑπÔ∏è  GitHub: –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    fi
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–∫—Ä—ã—Ç—å GAS –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    echo "üåê –û—Ç–∫—Ä—ã—Ç—å GAS –ø—Ä–æ–µ–∫—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/n):"
    read -r open_gas
    if [ "$open_gas" = "y" ] || [ "$open_gas" = "Y" ]; then
        clasp open
    fi
    
    echo ""
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ GAS –ø—É—à–∞
force_gas_push() {
    echo "üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GAS –ø—Ä–æ–µ–∫—Ç–æ–≤..."
    echo "=========================================="
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—à UA Management Optimized
    echo "üì§ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—à UA Management Optimized..."
    if [ -d ~/UA-management-Optimized- ]; then
        cd ~/UA-management-Optimized-
        if [ -f ".clasp.json" ]; then
            clasp push --force
            echo "‚úÖ UA Management Optimized –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ GAS"
        else
            echo "‚ùå .clasp.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ UA Management Optimized"
        fi
    else
        echo "‚ùå –ü–∞–ø–∫–∞ UA Management Optimized –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    echo ""
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—à Pivot Table
    echo "üì§ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—à Pivot Table..."
    if [ -d ~/pivot-table-gas ]; then
        cd ~/pivot-table-gas
        if [ -f ".clasp.json" ]; then
            clasp push --force
            echo "‚úÖ Pivot Table –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ GAS"
        else
            echo "‚ùå .clasp.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Pivot Table"
        fi
    else
        echo "‚ùå –ü–∞–ø–∫–∞ Pivot Table –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    echo "=========================================="
    echo "üèÅ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
echo "üöÄ –°–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ (–ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã ‚Üí GAS/GitHub)"
echo "=================================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ clasp
if ! command -v clasp &> /dev/null; then
    echo "‚ö†Ô∏è  Clasp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å? (y/n):"
    read -r install_clasp
    
    if [ "$install_clasp" = "y" ] || [ "$install_clasp" = "Y" ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º clasp..."
        npm install -g @google/clasp
        echo "‚úÖ Clasp —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo "üîê –¢–µ–ø–µ—Ä—å –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å: clasp login"
    fi
    echo ""
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
echo "üéõÔ∏è  –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "1) –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GAS –ø—Ä–æ–µ–∫—Ç–æ–≤"
echo "2) –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π GAS –ø—É—à (–±–µ–∑ git)"
echo "3) –í—ã—Ö–æ–¥"
echo ""
echo "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3):"
read -r choice

case $choice in
    1) 
        echo "üöÄ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GAS –ø—Ä–æ–µ–∫—Ç–æ–≤..."
        echo "=========================================="
        
        sync_gas_project "UA Management Optimized" ~/UA-management-Optimized-
        echo "=========================================="
        
        sync_gas_project "Pivot Table" ~/pivot-table-gas
        echo "=========================================="
        
        echo "üèÅ GAS –ø—Ä–æ–µ–∫—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!"
        ;;
    2) 
        force_gas_push
        ;;
    3) 
        exit 0
        ;;
    *) 
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        ;;
esac